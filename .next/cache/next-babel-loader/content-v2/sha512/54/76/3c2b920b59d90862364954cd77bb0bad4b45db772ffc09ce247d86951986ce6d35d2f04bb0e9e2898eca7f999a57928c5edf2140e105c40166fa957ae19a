{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport nc from \"next-connect\";\nimport notes from \"../../../data/data\";\nconst handler = nc().get((req, res) => {\n  res.json({\n    data: notes\n  });\n}).post((req, res) => {\n  const note = _objectSpread(_objectSpread({}, req.body), {}, {\n    id: Date.now()\n  });\n\n  notes.push(note);\n  res.json(note);\n}); // curl -d '{\"title\": \"Hello my first note\"}' -X POST http://localhost:3000/api/notes","map":{"version":3,"sources":["C:/Users/Collins/Desktop/.dev/Practice/Frontend Masters/Next Js/next-practice/src/pages/api/notes/index.js"],"names":["nc","notes","handler","get","req","res","json","data","post","note","body","id","Date","now","push"],"mappings":";;;;;;AAAA,OAAOA,EAAP,MAAe,cAAf;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AAEA,MAAMC,OAAO,GAAGF,EAAE,GACfG,GADa,CACT,CAACC,GAAD,EAAMC,GAAN,KAAc;AACjBA,EAAAA,GAAG,CAACC,IAAJ,CAAS;AAAEC,IAAAA,IAAI,EAAEN;AAAR,GAAT;AACD,CAHa,EAIbO,IAJa,CAIR,CAACJ,GAAD,EAAMC,GAAN,KAAc;AAClB,QAAMI,IAAI,mCACLL,GAAG,CAACM,IADC;AAERC,IAAAA,EAAE,EAAEC,IAAI,CAACC,GAAL;AAFI,IAAV;;AAKAZ,EAAAA,KAAK,CAACa,IAAN,CAAWL,IAAX;AAEAJ,EAAAA,GAAG,CAACC,IAAJ,CAASG,IAAT;AACD,CAba,CAAhB,C,CAgBA","sourcesContent":["import nc from \"next-connect\";\r\nimport notes from \"../../../data/data\";\r\n\r\nconst handler = nc()\r\n  .get((req, res) => {\r\n    res.json({ data: notes });\r\n  })\r\n  .post((req, res) => {\r\n    const note = {\r\n      ...req.body,\r\n      id: Date.now(),\r\n    };\r\n\r\n    notes.push(note);\r\n\r\n    res.json(note);\r\n  });\r\n\r\n\r\n// curl -d '{\"title\": \"Hello my first note\"}' -X POST http://localhost:3000/api/notes"]},"metadata":{},"sourceType":"module"}